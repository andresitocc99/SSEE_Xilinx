#include "platform.h"
#include "xparameters.h"

#include "lib_hyperspectral_hw.h"
#include "xscugic.h"
#include "xaxidma.h"
#include "xhyperspectral_hw_wrapped.h"
#include "xil_printf.h"

#define XPAR_FABRIC_HYPERSPECTRAL_HW_0_INTERRUPT_INTR XPAR_FABRIC_HYPERSPECTRAL_HW_WRA_0_INTERRUPT_INTR
#define XPAR_HYPERSPECTRAL_HW_0_S_AXI_CONTROL_BUS_BASEADDR XPAR_XHYPERSPECTRAL_HW_WRAPPED_0_S_AXI_CONTROL_BUS_BASEADDR

volatile static int ResultExample = 0;

XHyperspectral_hw_wrapped xhyperspectral_dev;

XHyperspectral_hw_wrapped_Config xhyperspectral_config = {
		0,
		XPAR_HYPERSPECTRAL_HW_0_S_AXI_CONTROL_BUS_BASEADDR
};

// Interrupt Controller Instance
XScuGic ScuGic;

extern XAxiDma AxiDma;

int XHyperspectralSetup() {
	return XHyperspectral_hw_wrapped_CfgInitialize(&xhyperspectral_dev,&xhyperspectral_config);
}

void XHyperspectralStart(void *InstancePtr) {
	XHyperspectral_hw_wrapped *pExample = (XHyperspectral_hw_wrapped *)InstancePtr;
	XHyperspectral_hw_wrapped_InterruptEnable (pExample,1);
	XHyperspectral_hw_wrapped_InterruptGlobalEnable(pExample);
	XHyperspectral_hw_wrapped_Start(pExample);
}

void XCalmaxIsr (void *InstancePtr) {
	XHyperspectral_hw_wrapped *pExample = (XHyperspectral_hw_wrapped *)InstancePtr;
	// DIsable the global interrupt
	XHyperspectral_hw_wrapped_InterruptGlobalDisable (pExample);
	// Disable the local interrupt
	XHyperspectral_hw_wrapped_InterruptDisable(pExample,0xffffffff);
	//clear the local interrupt
	XHyperspectral_hw_wrapped_InterruptClear(pExample,1);
	ResultExample = 1;
	XHyperspectral_hw_wrapped_InterruptEnable(pExample,1);
	XHyperspectral_hw_wrapped_InterruptGlobalEnable(pExample);


}


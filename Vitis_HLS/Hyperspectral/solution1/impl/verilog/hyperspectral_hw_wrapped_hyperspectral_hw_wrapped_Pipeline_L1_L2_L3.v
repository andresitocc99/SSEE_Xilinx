// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module hyperspectral_hw_wrapped_hyperspectral_hw_wrapped_Pipeline_L1_L2_L3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        image_r_address0,
        image_r_ce0,
        image_r_q0,
        select_ln44_2_out,
        select_ln44_2_out_ap_vld,
        select_ln44_3_out,
        select_ln44_3_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [18:0] image_r_address0;
output   image_r_ce0;
input  [15:0] image_r_q0;
output  [31:0] select_ln44_2_out;
output   select_ln44_2_out_ap_vld;
output  [31:0] select_ln44_3_out;
output   select_ln44_3_out_ap_vld;

reg ap_idle;
reg image_r_ce0;
reg select_ln44_2_out_ap_vld;
reg select_ln44_3_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln37_fu_179_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] empty_20_fu_171_p1;
reg   [0:0] empty_20_reg_605;
reg   [0:0] empty_20_reg_605_pp0_iter2_reg;
reg   [0:0] empty_20_reg_605_pp0_iter3_reg;
reg   [0:0] empty_20_reg_605_pp0_iter4_reg;
wire   [9:0] trunc_ln44_fu_175_p1;
reg   [9:0] trunc_ln44_reg_611;
reg   [9:0] trunc_ln44_reg_611_pp0_iter2_reg;
reg   [9:0] trunc_ln44_reg_611_pp0_iter3_reg;
reg   [9:0] trunc_ln44_reg_611_pp0_iter4_reg;
reg   [0:0] icmp_ln37_reg_616;
reg   [0:0] icmp_ln37_reg_616_pp0_iter2_reg;
reg   [0:0] icmp_ln37_reg_616_pp0_iter3_reg;
reg   [0:0] icmp_ln37_reg_616_pp0_iter4_reg;
wire   [1:0] add_ln37_fu_197_p2;
reg   [1:0] add_ln37_reg_620;
reg   [1:0] add_ln37_reg_620_pp0_iter2_reg;
reg   [1:0] add_ln37_reg_620_pp0_iter3_reg;
reg   [1:0] add_ln37_reg_620_pp0_iter4_reg;
wire   [0:0] icmp_ln38_fu_203_p2;
reg   [0:0] icmp_ln38_reg_625;
reg   [0:0] icmp_ln38_reg_625_pp0_iter2_reg;
reg   [0:0] icmp_ln38_reg_625_pp0_iter3_reg;
reg   [0:0] icmp_ln38_reg_625_pp0_iter4_reg;
wire   [10:0] select_ln47_fu_209_p3;
reg   [10:0] select_ln47_reg_634;
reg   [10:0] select_ln47_reg_634_pp0_iter2_reg;
reg   [10:0] select_ln47_reg_634_pp0_iter3_reg;
reg   [10:0] select_ln47_reg_634_pp0_iter4_reg;
wire   [0:0] and_ln47_fu_249_p2;
reg   [0:0] and_ln47_reg_639;
reg   [0:0] and_ln47_reg_639_pp0_iter2_reg;
reg   [0:0] and_ln47_reg_639_pp0_iter3_reg;
reg   [0:0] and_ln47_reg_639_pp0_iter4_reg;
wire   [0:0] or_ln38_fu_261_p2;
reg   [0:0] or_ln38_reg_646;
reg   [0:0] or_ln38_reg_646_pp0_iter2_reg;
reg   [0:0] or_ln38_reg_646_pp0_iter3_reg;
reg   [0:0] or_ln38_reg_646_pp0_iter4_reg;
wire   [7:0] select_ln38_fu_267_p3;
reg   [7:0] select_ln38_reg_651;
reg   [7:0] select_ln38_reg_651_pp0_iter2_reg;
wire   [63:0] zext_ln41_3_fu_335_p1;
wire    ap_block_pp0_stage0;
reg   [23:0] currentBrightness_fu_64;
wire   [23:0] currentBrightness_3_fu_507_p2;
wire    ap_loop_init;
reg   [7:0] k_fu_68;
wire   [7:0] add_ln40_fu_287_p2;
reg   [31:0] empty_fu_72;
wire   [31:0] select_ln38_5_fu_496_p3;
reg   [31:0] i_06_i_i631_fu_76;
wire   [31:0] select_ln38_4_fu_489_p3;
reg   [31:0] j_05_i_i633_fu_80;
wire   [31:0] select_ln38_3_fu_482_p3;
reg   [10:0] j_fu_84;
wire   [10:0] select_ln38_2_fu_275_p3;
reg   [18:0] indvar_flatten31_fu_88;
wire   [18:0] select_ln38_6_fu_299_p3;
reg   [1:0] i_3_fu_92;
wire   [1:0] select_ln47_4_fu_217_p3;
reg   [18:0] indvar_flatten52_fu_96;
wire   [18:0] add_ln37_1_fu_185_p2;
wire   [31:0] select_ln44_2_fu_367_p3;
wire    ap_block_pp0_stage0_01001;
wire   [31:0] select_ln44_3_fu_376_p3;
wire   [11:0] tmp_s_fu_225_p3;
wire   [0:0] icmp_ln40_fu_243_p2;
wire   [0:0] xor_ln47_fu_237_p2;
wire   [10:0] add_ln38_fu_255_p2;
wire   [18:0] add_ln38_1_fu_293_p2;
wire   [18:0] grp_fu_533_p4;
wire   [31:0] currentBrightness_cast_fu_354_p1;
wire   [0:0] icmp_ln44_1_fu_358_p2;
wire   [31:0] zext_ln44_1_fu_364_p1;
wire   [31:0] i_3_cast_cast_fu_351_p1;
wire   [31:0] select_ln44_4_fu_399_p3;
wire   [0:0] empty_22_fu_414_p1;
wire   [0:0] select_ln47_5_fu_417_p3;
wire   [23:0] select_ln47_6_fu_427_p3;
wire   [31:0] select_ln47_7_cast_fu_434_p1;
wire   [31:0] select_ln47_3_fu_407_p3;
wire   [9:0] trunc_ln44_1_fu_444_p1;
wire   [0:0] icmp_ln44_fu_438_p2;
wire   [31:0] zext_ln44_fu_447_p1;
wire   [31:0] select_ln47_1_fu_385_p3;
wire   [31:0] zext_ln47_fu_423_p1;
wire   [31:0] select_ln47_2_fu_392_p3;
wire   [31:0] select_ln44_fu_451_p3;
wire   [31:0] select_ln44_1_fu_459_p3;
wire   [31:0] maxBrightness_fu_467_p3;
wire   [23:0] zext_ln41_fu_503_p1;
wire   [23:0] select_ln38_1_fu_475_p3;
wire   [11:0] grp_fu_533_p0;
wire   [10:0] grp_fu_533_p1;
wire   [7:0] grp_fu_533_p2;
wire   [7:0] grp_fu_533_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [12:0] grp_fu_533_p00;
wire   [12:0] grp_fu_533_p10;
wire   [18:0] grp_fu_533_p30;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_done_reg = 1'b0;
end

hyperspectral_hw_wrapped_ama_addmuladd_12ns_11ns_8ns_8ns_19_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .dout_WIDTH( 19 ))
ama_addmuladd_12ns_11ns_8ns_8ns_19_4_1_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_533_p0),
    .din1(grp_fu_533_p1),
    .din2(grp_fu_533_p2),
    .din3(grp_fu_533_p3),
    .ce(1'b1),
    .dout(grp_fu_533_p4)
);

hyperspectral_hw_wrapped_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b0))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            currentBrightness_fu_64 <= 24'd0;
        end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln37_reg_616_pp0_iter4_reg == 1'd0))) begin
            currentBrightness_fu_64 <= currentBrightness_3_fu_507_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            empty_fu_72 <= 32'd0;
        end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln37_reg_616_pp0_iter4_reg == 1'd0))) begin
            empty_fu_72 <= select_ln38_5_fu_496_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_3_fu_92 <= 2'd0;
        end else if (((icmp_ln37_fu_179_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_3_fu_92 <= select_ln47_4_fu_217_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten31_fu_88 <= 19'd0;
        end else if (((icmp_ln37_fu_179_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten31_fu_88 <= select_ln38_6_fu_299_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten52_fu_96 <= 19'd0;
        end else if (((icmp_ln37_fu_179_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten52_fu_96 <= add_ln37_1_fu_185_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_84 <= 11'd0;
        end else if (((icmp_ln37_fu_179_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            j_fu_84 <= select_ln38_2_fu_275_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            k_fu_68 <= 8'd0;
        end else if (((icmp_ln37_fu_179_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            k_fu_68 <= add_ln40_fu_287_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_fu_179_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln37_reg_620 <= add_ln37_fu_197_p2;
        and_ln47_reg_639 <= and_ln47_fu_249_p2;
        icmp_ln38_reg_625 <= icmp_ln38_fu_203_p2;
        or_ln38_reg_646 <= or_ln38_fu_261_p2;
        select_ln38_reg_651 <= select_ln38_fu_267_p3;
        select_ln47_reg_634 <= select_ln47_fu_209_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln37_reg_620_pp0_iter2_reg <= add_ln37_reg_620;
        add_ln37_reg_620_pp0_iter3_reg <= add_ln37_reg_620_pp0_iter2_reg;
        add_ln37_reg_620_pp0_iter4_reg <= add_ln37_reg_620_pp0_iter3_reg;
        and_ln47_reg_639_pp0_iter2_reg <= and_ln47_reg_639;
        and_ln47_reg_639_pp0_iter3_reg <= and_ln47_reg_639_pp0_iter2_reg;
        and_ln47_reg_639_pp0_iter4_reg <= and_ln47_reg_639_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        empty_20_reg_605_pp0_iter2_reg <= empty_20_reg_605;
        empty_20_reg_605_pp0_iter3_reg <= empty_20_reg_605_pp0_iter2_reg;
        empty_20_reg_605_pp0_iter4_reg <= empty_20_reg_605_pp0_iter3_reg;
        icmp_ln37_reg_616_pp0_iter2_reg <= icmp_ln37_reg_616;
        icmp_ln37_reg_616_pp0_iter3_reg <= icmp_ln37_reg_616_pp0_iter2_reg;
        icmp_ln37_reg_616_pp0_iter4_reg <= icmp_ln37_reg_616_pp0_iter3_reg;
        icmp_ln38_reg_625_pp0_iter2_reg <= icmp_ln38_reg_625;
        icmp_ln38_reg_625_pp0_iter3_reg <= icmp_ln38_reg_625_pp0_iter2_reg;
        icmp_ln38_reg_625_pp0_iter4_reg <= icmp_ln38_reg_625_pp0_iter3_reg;
        or_ln38_reg_646_pp0_iter2_reg <= or_ln38_reg_646;
        or_ln38_reg_646_pp0_iter3_reg <= or_ln38_reg_646_pp0_iter2_reg;
        or_ln38_reg_646_pp0_iter4_reg <= or_ln38_reg_646_pp0_iter3_reg;
        select_ln38_reg_651_pp0_iter2_reg <= select_ln38_reg_651;
        select_ln47_reg_634_pp0_iter2_reg <= select_ln47_reg_634;
        select_ln47_reg_634_pp0_iter3_reg <= select_ln47_reg_634_pp0_iter2_reg;
        select_ln47_reg_634_pp0_iter4_reg <= select_ln47_reg_634_pp0_iter3_reg;
        trunc_ln44_reg_611_pp0_iter2_reg <= trunc_ln44_reg_611;
        trunc_ln44_reg_611_pp0_iter3_reg <= trunc_ln44_reg_611_pp0_iter2_reg;
        trunc_ln44_reg_611_pp0_iter4_reg <= trunc_ln44_reg_611_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        empty_20_reg_605 <= empty_20_fu_171_p1;
        icmp_ln37_reg_616 <= icmp_ln37_fu_179_p2;
        trunc_ln44_reg_611 <= trunc_ln44_fu_175_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln37_reg_616_pp0_iter4_reg == 1'd0))) begin
        i_06_i_i631_fu_76 <= select_ln38_4_fu_489_p3;
        j_05_i_i633_fu_80 <= select_ln38_3_fu_482_p3;
    end
end

always @ (*) begin
    if (((icmp_ln37_fu_179_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        image_r_ce0 = 1'b1;
    end else begin
        image_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_reg_616_pp0_iter4_reg == 1'd1))) begin
        select_ln44_2_out_ap_vld = 1'b1;
    end else begin
        select_ln44_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_reg_616_pp0_iter4_reg == 1'd1))) begin
        select_ln44_3_out_ap_vld = 1'b1;
    end else begin
        select_ln44_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln37_1_fu_185_p2 = (indvar_flatten52_fu_96 + 19'd1);

assign add_ln37_fu_197_p2 = (i_3_fu_92 + 2'd1);

assign add_ln38_1_fu_293_p2 = (indvar_flatten31_fu_88 + 19'd1);

assign add_ln38_fu_255_p2 = (select_ln47_fu_209_p3 + 11'd1);

assign add_ln40_fu_287_p2 = (select_ln38_fu_267_p3 + 8'd1);

assign and_ln47_fu_249_p2 = (xor_ln47_fu_237_p2 & icmp_ln40_fu_243_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign currentBrightness_3_fu_507_p2 = (zext_ln41_fu_503_p1 + select_ln38_1_fu_475_p3);

assign currentBrightness_cast_fu_354_p1 = currentBrightness_fu_64;

assign empty_20_fu_171_p1 = i_3_fu_92[0:0];

assign empty_22_fu_414_p1 = add_ln37_reg_620_pp0_iter4_reg[0:0];

assign grp_fu_533_p0 = grp_fu_533_p00;

assign grp_fu_533_p00 = tmp_s_fu_225_p3;

assign grp_fu_533_p1 = grp_fu_533_p10;

assign grp_fu_533_p10 = select_ln38_2_fu_275_p3;

assign grp_fu_533_p2 = 19'd180;

assign grp_fu_533_p3 = grp_fu_533_p30;

assign grp_fu_533_p30 = select_ln38_reg_651_pp0_iter2_reg;

assign i_3_cast_cast_fu_351_p1 = empty_20_reg_605_pp0_iter4_reg;

assign icmp_ln37_fu_179_p2 = ((indvar_flatten52_fu_96 == 19'd368640) ? 1'b1 : 1'b0);

assign icmp_ln38_fu_203_p2 = ((indvar_flatten31_fu_88 == 19'd184320) ? 1'b1 : 1'b0);

assign icmp_ln40_fu_243_p2 = ((k_fu_68 == 8'd180) ? 1'b1 : 1'b0);

assign icmp_ln44_1_fu_358_p2 = ((currentBrightness_cast_fu_354_p1 > empty_fu_72) ? 1'b1 : 1'b0);

assign icmp_ln44_fu_438_p2 = ((select_ln47_7_cast_fu_434_p1 > select_ln47_3_fu_407_p3) ? 1'b1 : 1'b0);

assign image_r_address0 = zext_ln41_3_fu_335_p1;

assign maxBrightness_fu_467_p3 = ((icmp_ln44_fu_438_p2[0:0] == 1'b1) ? select_ln47_7_cast_fu_434_p1 : select_ln47_3_fu_407_p3);

assign or_ln38_fu_261_p2 = (icmp_ln38_fu_203_p2 | and_ln47_fu_249_p2);

assign select_ln38_1_fu_475_p3 = ((or_ln38_reg_646_pp0_iter4_reg[0:0] == 1'b1) ? 24'd0 : currentBrightness_fu_64);

assign select_ln38_2_fu_275_p3 = ((and_ln47_fu_249_p2[0:0] == 1'b1) ? add_ln38_fu_255_p2 : select_ln47_fu_209_p3);

assign select_ln38_3_fu_482_p3 = ((and_ln47_reg_639_pp0_iter4_reg[0:0] == 1'b1) ? select_ln44_fu_451_p3 : select_ln47_1_fu_385_p3);

assign select_ln38_4_fu_489_p3 = ((and_ln47_reg_639_pp0_iter4_reg[0:0] == 1'b1) ? select_ln44_1_fu_459_p3 : select_ln47_2_fu_392_p3);

assign select_ln38_5_fu_496_p3 = ((and_ln47_reg_639_pp0_iter4_reg[0:0] == 1'b1) ? maxBrightness_fu_467_p3 : select_ln47_3_fu_407_p3);

assign select_ln38_6_fu_299_p3 = ((icmp_ln38_fu_203_p2[0:0] == 1'b1) ? 19'd1 : add_ln38_1_fu_293_p2);

assign select_ln38_fu_267_p3 = ((or_ln38_fu_261_p2[0:0] == 1'b1) ? 8'd0 : k_fu_68);

assign select_ln44_1_fu_459_p3 = ((icmp_ln44_fu_438_p2[0:0] == 1'b1) ? zext_ln47_fu_423_p1 : select_ln47_2_fu_392_p3);

assign select_ln44_2_fu_367_p3 = ((icmp_ln44_1_fu_358_p2[0:0] == 1'b1) ? zext_ln44_1_fu_364_p1 : j_05_i_i633_fu_80);

assign select_ln44_2_out = select_ln44_2_fu_367_p3;

assign select_ln44_3_fu_376_p3 = ((icmp_ln44_1_fu_358_p2[0:0] == 1'b1) ? i_3_cast_cast_fu_351_p1 : i_06_i_i631_fu_76);

assign select_ln44_3_out = select_ln44_3_fu_376_p3;

assign select_ln44_4_fu_399_p3 = ((icmp_ln44_1_fu_358_p2[0:0] == 1'b1) ? currentBrightness_cast_fu_354_p1 : empty_fu_72);

assign select_ln44_fu_451_p3 = ((icmp_ln44_fu_438_p2[0:0] == 1'b1) ? zext_ln44_fu_447_p1 : select_ln47_1_fu_385_p3);

assign select_ln47_1_fu_385_p3 = ((icmp_ln38_reg_625_pp0_iter4_reg[0:0] == 1'b1) ? select_ln44_2_fu_367_p3 : j_05_i_i633_fu_80);

assign select_ln47_2_fu_392_p3 = ((icmp_ln38_reg_625_pp0_iter4_reg[0:0] == 1'b1) ? select_ln44_3_fu_376_p3 : i_06_i_i631_fu_76);

assign select_ln47_3_fu_407_p3 = ((icmp_ln38_reg_625_pp0_iter4_reg[0:0] == 1'b1) ? select_ln44_4_fu_399_p3 : empty_fu_72);

assign select_ln47_4_fu_217_p3 = ((icmp_ln38_fu_203_p2[0:0] == 1'b1) ? add_ln37_fu_197_p2 : i_3_fu_92);

assign select_ln47_5_fu_417_p3 = ((icmp_ln38_reg_625_pp0_iter4_reg[0:0] == 1'b1) ? empty_22_fu_414_p1 : empty_20_reg_605_pp0_iter4_reg);

assign select_ln47_6_fu_427_p3 = ((icmp_ln38_reg_625_pp0_iter4_reg[0:0] == 1'b1) ? 24'd0 : currentBrightness_fu_64);

assign select_ln47_7_cast_fu_434_p1 = select_ln47_6_fu_427_p3;

assign select_ln47_fu_209_p3 = ((icmp_ln38_fu_203_p2[0:0] == 1'b1) ? 11'd0 : j_fu_84);

assign tmp_s_fu_225_p3 = {{select_ln47_4_fu_217_p3}, {10'd0}};

assign trunc_ln44_1_fu_444_p1 = select_ln47_reg_634_pp0_iter4_reg[9:0];

assign trunc_ln44_fu_175_p1 = j_fu_84[9:0];

assign xor_ln47_fu_237_p2 = (icmp_ln38_fu_203_p2 ^ 1'd1);

assign zext_ln41_3_fu_335_p1 = grp_fu_533_p4;

assign zext_ln41_fu_503_p1 = image_r_q0;

assign zext_ln44_1_fu_364_p1 = trunc_ln44_reg_611_pp0_iter4_reg;

assign zext_ln44_fu_447_p1 = trunc_ln44_1_fu_444_p1;

assign zext_ln47_fu_423_p1 = select_ln47_5_fu_417_p3;

endmodule //hyperspectral_hw_wrapped_hyperspectral_hw_wrapped_Pipeline_L1_L2_L3

// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="mmult_hw_wrapped_mmult_hw_wrapped,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.838000,HLS_SYN_LAT=67738,HLS_SYN_TPT=none,HLS_SYN_MEM=6,HLS_SYN_DSP=0,HLS_SYN_FF=2424,HLS_SYN_LUT=2919,HLS_VERSION=2022_1}" *)

module mmult_hw_wrapped (
        ap_clk,
        ap_rst_n,
        INPUT_STREAM_TDATA,
        INPUT_STREAM_TVALID,
        INPUT_STREAM_TREADY,
        INPUT_STREAM_TKEEP,
        INPUT_STREAM_TSTRB,
        INPUT_STREAM_TUSER,
        INPUT_STREAM_TLAST,
        INPUT_STREAM_TID,
        INPUT_STREAM_TDEST,
        OUTPUT_STREAM_TDATA,
        OUTPUT_STREAM_TVALID,
        OUTPUT_STREAM_TREADY,
        OUTPUT_STREAM_TKEEP,
        OUTPUT_STREAM_TSTRB,
        OUTPUT_STREAM_TUSER,
        OUTPUT_STREAM_TLAST,
        OUTPUT_STREAM_TID,
        OUTPUT_STREAM_TDEST,
        s_axi_CONTROL_BUS_AWVALID,
        s_axi_CONTROL_BUS_AWREADY,
        s_axi_CONTROL_BUS_AWADDR,
        s_axi_CONTROL_BUS_WVALID,
        s_axi_CONTROL_BUS_WREADY,
        s_axi_CONTROL_BUS_WDATA,
        s_axi_CONTROL_BUS_WSTRB,
        s_axi_CONTROL_BUS_ARVALID,
        s_axi_CONTROL_BUS_ARREADY,
        s_axi_CONTROL_BUS_ARADDR,
        s_axi_CONTROL_BUS_RVALID,
        s_axi_CONTROL_BUS_RREADY,
        s_axi_CONTROL_BUS_RDATA,
        s_axi_CONTROL_BUS_RRESP,
        s_axi_CONTROL_BUS_BVALID,
        s_axi_CONTROL_BUS_BREADY,
        s_axi_CONTROL_BUS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 13'd1;
parameter    ap_ST_fsm_state2 = 13'd2;
parameter    ap_ST_fsm_state3 = 13'd4;
parameter    ap_ST_fsm_state4 = 13'd8;
parameter    ap_ST_fsm_state5 = 13'd16;
parameter    ap_ST_fsm_state6 = 13'd32;
parameter    ap_ST_fsm_state7 = 13'd64;
parameter    ap_ST_fsm_state8 = 13'd128;
parameter    ap_ST_fsm_state9 = 13'd256;
parameter    ap_ST_fsm_state10 = 13'd512;
parameter    ap_ST_fsm_state11 = 13'd1024;
parameter    ap_ST_fsm_state12 = 13'd2048;
parameter    ap_ST_fsm_state13 = 13'd4096;
parameter    C_S_AXI_CONTROL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_BUS_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [31:0] INPUT_STREAM_TDATA;
input   INPUT_STREAM_TVALID;
output   INPUT_STREAM_TREADY;
input  [3:0] INPUT_STREAM_TKEEP;
input  [3:0] INPUT_STREAM_TSTRB;
input  [3:0] INPUT_STREAM_TUSER;
input  [0:0] INPUT_STREAM_TLAST;
input  [4:0] INPUT_STREAM_TID;
input  [4:0] INPUT_STREAM_TDEST;
output  [31:0] OUTPUT_STREAM_TDATA;
output   OUTPUT_STREAM_TVALID;
input   OUTPUT_STREAM_TREADY;
output  [3:0] OUTPUT_STREAM_TKEEP;
output  [3:0] OUTPUT_STREAM_TSTRB;
output  [3:0] OUTPUT_STREAM_TUSER;
output  [0:0] OUTPUT_STREAM_TLAST;
output  [4:0] OUTPUT_STREAM_TID;
output  [4:0] OUTPUT_STREAM_TDEST;
input   s_axi_CONTROL_BUS_AWVALID;
output   s_axi_CONTROL_BUS_AWREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1:0] s_axi_CONTROL_BUS_AWADDR;
input   s_axi_CONTROL_BUS_WVALID;
output   s_axi_CONTROL_BUS_WREADY;
input  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1:0] s_axi_CONTROL_BUS_WDATA;
input  [C_S_AXI_CONTROL_BUS_WSTRB_WIDTH - 1:0] s_axi_CONTROL_BUS_WSTRB;
input   s_axi_CONTROL_BUS_ARVALID;
output   s_axi_CONTROL_BUS_ARREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1:0] s_axi_CONTROL_BUS_ARADDR;
output   s_axi_CONTROL_BUS_RVALID;
input   s_axi_CONTROL_BUS_RREADY;
output  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1:0] s_axi_CONTROL_BUS_RDATA;
output  [1:0] s_axi_CONTROL_BUS_RRESP;
output   s_axi_CONTROL_BUS_BVALID;
input   s_axi_CONTROL_BUS_BREADY;
output  [1:0] s_axi_CONTROL_BUS_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [9:0] a_address0;
reg    a_ce0;
reg    a_we0;
wire   [31:0] a_q0;
reg   [9:0] b_address0;
reg    b_ce0;
reg    b_we0;
wire   [31:0] b_q0;
reg   [9:0] out_address0;
reg    out_ce0;
reg    out_we0;
wire   [31:0] out_q0;
wire    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_start;
wire    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_done;
wire    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_idle;
wire    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_ready;
wire   [9:0] grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_a_address0;
wire    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_a_ce0;
wire    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_a_we0;
wire   [31:0] grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_a_d0;
wire    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_INPUT_STREAM_TREADY;
wire    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_start;
wire    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_done;
wire    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_idle;
wire    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_ready;
wire   [9:0] grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_b_address0;
wire    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_b_ce0;
wire    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_b_we0;
wire   [31:0] grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_b_d0;
wire    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_INPUT_STREAM_TREADY;
wire    grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_start;
wire    grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_done;
wire    grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_idle;
wire    grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_ready;
wire    grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_sum_v_read;
wire   [9:0] grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_a_address0;
wire    grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_a_ce0;
wire   [9:0] grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_b_address0;
wire    grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_b_ce0;
wire   [9:0] grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_out_r_address0;
wire    grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_out_r_ce0;
wire    grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_out_r_we0;
wire   [31:0] grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_out_r_d0;
wire   [31:0] grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_sum_v_din;
wire    grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_sum_v_write;
wire    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_start;
wire    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_done;
wire    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_idle;
wire    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_ready;
wire    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TREADY;
wire   [9:0] grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_out_r_address0;
wire    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_out_r_ce0;
wire   [31:0] grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TDATA;
wire    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TVALID;
wire   [3:0] grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TKEEP;
wire   [3:0] grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TSTRB;
wire   [3:0] grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TUSER;
wire   [0:0] grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TLAST;
wire   [4:0] grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TID;
wire   [4:0] grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TDEST;
reg    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
reg    grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_start_reg;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire   [31:0] sum_v_dout;
wire    sum_v_empty_n;
reg    sum_v_read;
wire    sum_v_full_n;
reg    sum_v_write;
reg    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_start_reg;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    regslice_both_OUTPUT_STREAM_V_data_V_U_apdone_blk;
reg   [12:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
reg    ap_ST_fsm_state12_blk;
reg    ap_ST_fsm_state13_blk;
wire    regslice_both_INPUT_STREAM_V_data_V_U_apdone_blk;
wire   [31:0] INPUT_STREAM_TDATA_int_regslice;
wire    INPUT_STREAM_TVALID_int_regslice;
reg    INPUT_STREAM_TREADY_int_regslice;
wire    regslice_both_INPUT_STREAM_V_data_V_U_ack_in;
wire    regslice_both_INPUT_STREAM_V_keep_V_U_apdone_blk;
wire   [3:0] INPUT_STREAM_TKEEP_int_regslice;
wire    regslice_both_INPUT_STREAM_V_keep_V_U_vld_out;
wire    regslice_both_INPUT_STREAM_V_keep_V_U_ack_in;
wire    regslice_both_INPUT_STREAM_V_strb_V_U_apdone_blk;
wire   [3:0] INPUT_STREAM_TSTRB_int_regslice;
wire    regslice_both_INPUT_STREAM_V_strb_V_U_vld_out;
wire    regslice_both_INPUT_STREAM_V_strb_V_U_ack_in;
wire    regslice_both_INPUT_STREAM_V_user_V_U_apdone_blk;
wire   [3:0] INPUT_STREAM_TUSER_int_regslice;
wire    regslice_both_INPUT_STREAM_V_user_V_U_vld_out;
wire    regslice_both_INPUT_STREAM_V_user_V_U_ack_in;
wire    regslice_both_INPUT_STREAM_V_last_V_U_apdone_blk;
wire   [0:0] INPUT_STREAM_TLAST_int_regslice;
wire    regslice_both_INPUT_STREAM_V_last_V_U_vld_out;
wire    regslice_both_INPUT_STREAM_V_last_V_U_ack_in;
wire    regslice_both_INPUT_STREAM_V_id_V_U_apdone_blk;
wire   [4:0] INPUT_STREAM_TID_int_regslice;
wire    regslice_both_INPUT_STREAM_V_id_V_U_vld_out;
wire    regslice_both_INPUT_STREAM_V_id_V_U_ack_in;
wire    regslice_both_INPUT_STREAM_V_dest_V_U_apdone_blk;
wire   [4:0] INPUT_STREAM_TDEST_int_regslice;
wire    regslice_both_INPUT_STREAM_V_dest_V_U_vld_out;
wire    regslice_both_INPUT_STREAM_V_dest_V_U_ack_in;
wire    OUTPUT_STREAM_TVALID_int_regslice;
wire    OUTPUT_STREAM_TREADY_int_regslice;
wire    regslice_both_OUTPUT_STREAM_V_data_V_U_vld_out;
wire    regslice_both_OUTPUT_STREAM_V_keep_V_U_apdone_blk;
wire    regslice_both_OUTPUT_STREAM_V_keep_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_STREAM_V_keep_V_U_vld_out;
wire    regslice_both_OUTPUT_STREAM_V_strb_V_U_apdone_blk;
wire    regslice_both_OUTPUT_STREAM_V_strb_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_STREAM_V_strb_V_U_vld_out;
wire    regslice_both_OUTPUT_STREAM_V_user_V_U_apdone_blk;
wire    regslice_both_OUTPUT_STREAM_V_user_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_STREAM_V_user_V_U_vld_out;
wire    regslice_both_OUTPUT_STREAM_V_last_V_U_apdone_blk;
wire    regslice_both_OUTPUT_STREAM_V_last_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_STREAM_V_last_V_U_vld_out;
wire    regslice_both_OUTPUT_STREAM_V_id_V_U_apdone_blk;
wire    regslice_both_OUTPUT_STREAM_V_id_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_STREAM_V_id_V_U_vld_out;
wire    regslice_both_OUTPUT_STREAM_V_dest_V_U_apdone_blk;
wire    regslice_both_OUTPUT_STREAM_V_dest_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_STREAM_V_dest_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 13'd1;
#0 grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_start_reg = 1'b0;
#0 grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_start_reg = 1'b0;
#0 grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_start_reg = 1'b0;
#0 grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_start_reg = 1'b0;
end

mmult_hw_wrapped_a_RAM_1WNR_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
a_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_address0),
    .ce0(a_ce0),
    .we0(a_we0),
    .d0(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_a_d0),
    .q0(a_q0)
);

mmult_hw_wrapped_a_RAM_1WNR_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
b_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_address0),
    .ce0(b_ce0),
    .we0(b_we0),
    .d0(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_b_d0),
    .q0(b_q0)
);

mmult_hw_wrapped_out_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(out_address0),
    .ce0(out_ce0),
    .we0(out_we0),
    .d0(grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_out_r_d0),
    .q0(out_q0)
);

mmult_hw_wrapped_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2 grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_start),
    .ap_done(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_done),
    .ap_idle(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_idle),
    .ap_ready(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_ready),
    .INPUT_STREAM_TVALID(INPUT_STREAM_TVALID_int_regslice),
    .a_address0(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_a_address0),
    .a_ce0(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_a_ce0),
    .a_we0(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_a_we0),
    .a_d0(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_a_d0),
    .INPUT_STREAM_TDATA(INPUT_STREAM_TDATA_int_regslice),
    .INPUT_STREAM_TREADY(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_INPUT_STREAM_TREADY),
    .INPUT_STREAM_TKEEP(INPUT_STREAM_TKEEP_int_regslice),
    .INPUT_STREAM_TSTRB(INPUT_STREAM_TSTRB_int_regslice),
    .INPUT_STREAM_TUSER(INPUT_STREAM_TUSER_int_regslice),
    .INPUT_STREAM_TLAST(INPUT_STREAM_TLAST_int_regslice),
    .INPUT_STREAM_TID(INPUT_STREAM_TID_int_regslice),
    .INPUT_STREAM_TDEST(INPUT_STREAM_TDEST_int_regslice)
);

mmult_hw_wrapped_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5 grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_start),
    .ap_done(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_done),
    .ap_idle(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_idle),
    .ap_ready(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_ready),
    .INPUT_STREAM_TVALID(INPUT_STREAM_TVALID_int_regslice),
    .b_address0(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_b_address0),
    .b_ce0(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_b_ce0),
    .b_we0(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_b_we0),
    .b_d0(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_b_d0),
    .INPUT_STREAM_TDATA(INPUT_STREAM_TDATA_int_regslice),
    .INPUT_STREAM_TREADY(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_INPUT_STREAM_TREADY),
    .INPUT_STREAM_TKEEP(INPUT_STREAM_TKEEP_int_regslice),
    .INPUT_STREAM_TSTRB(INPUT_STREAM_TSTRB_int_regslice),
    .INPUT_STREAM_TUSER(INPUT_STREAM_TUSER_int_regslice),
    .INPUT_STREAM_TLAST(INPUT_STREAM_TLAST_int_regslice),
    .INPUT_STREAM_TID(INPUT_STREAM_TID_int_regslice),
    .INPUT_STREAM_TDEST(INPUT_STREAM_TDEST_int_regslice)
);

mmult_hw_wrapped_mmult_hw_wrapped_Pipeline_L1_L2 grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_start),
    .ap_done(grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_done),
    .ap_idle(grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_idle),
    .ap_ready(grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_ready),
    .sum_v_dout(sum_v_dout),
    .sum_v_empty_n(sum_v_empty_n),
    .sum_v_read(grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_sum_v_read),
    .a_address0(grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_a_address0),
    .a_ce0(grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_a_ce0),
    .a_q0(a_q0),
    .b_address0(grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_b_address0),
    .b_ce0(grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_b_ce0),
    .b_q0(b_q0),
    .out_r_address0(grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_out_r_address0),
    .out_r_ce0(grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_out_r_ce0),
    .out_r_we0(grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_out_r_we0),
    .out_r_d0(grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_out_r_d0),
    .sum_v_din(grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_sum_v_din),
    .sum_v_full_n(sum_v_full_n),
    .sum_v_write(grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_sum_v_write)
);

mmult_hw_wrapped_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8 grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_start),
    .ap_done(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_done),
    .ap_idle(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_idle),
    .ap_ready(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_ready),
    .OUTPUT_STREAM_TREADY(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TREADY),
    .out_r_address0(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_out_r_address0),
    .out_r_ce0(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_out_r_ce0),
    .out_r_q0(out_q0),
    .OUTPUT_STREAM_TDATA(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TDATA),
    .OUTPUT_STREAM_TVALID(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TVALID),
    .OUTPUT_STREAM_TKEEP(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TKEEP),
    .OUTPUT_STREAM_TSTRB(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TSTRB),
    .OUTPUT_STREAM_TUSER(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TUSER),
    .OUTPUT_STREAM_TLAST(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TLAST),
    .OUTPUT_STREAM_TID(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TID),
    .OUTPUT_STREAM_TDEST(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TDEST)
);

mmult_hw_wrapped_CONTROL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_BUS_DATA_WIDTH ))
CONTROL_BUS_s_axi_U(
    .AWVALID(s_axi_CONTROL_BUS_AWVALID),
    .AWREADY(s_axi_CONTROL_BUS_AWREADY),
    .AWADDR(s_axi_CONTROL_BUS_AWADDR),
    .WVALID(s_axi_CONTROL_BUS_WVALID),
    .WREADY(s_axi_CONTROL_BUS_WREADY),
    .WDATA(s_axi_CONTROL_BUS_WDATA),
    .WSTRB(s_axi_CONTROL_BUS_WSTRB),
    .ARVALID(s_axi_CONTROL_BUS_ARVALID),
    .ARREADY(s_axi_CONTROL_BUS_ARREADY),
    .ARADDR(s_axi_CONTROL_BUS_ARADDR),
    .RVALID(s_axi_CONTROL_BUS_RVALID),
    .RREADY(s_axi_CONTROL_BUS_RREADY),
    .RDATA(s_axi_CONTROL_BUS_RDATA),
    .RRESP(s_axi_CONTROL_BUS_RRESP),
    .BVALID(s_axi_CONTROL_BUS_BVALID),
    .BREADY(s_axi_CONTROL_BUS_BREADY),
    .BRESP(s_axi_CONTROL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

mmult_hw_wrapped_fifo_w32_d2_S sum_v_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_sum_v_din),
    .if_full_n(sum_v_full_n),
    .if_write(sum_v_write),
    .if_dout(sum_v_dout),
    .if_empty_n(sum_v_empty_n),
    .if_read(sum_v_read)
);

mmult_hw_wrapped_regslice_both #(
    .DataWidth( 32 ))
regslice_both_INPUT_STREAM_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(INPUT_STREAM_TDATA),
    .vld_in(INPUT_STREAM_TVALID),
    .ack_in(regslice_both_INPUT_STREAM_V_data_V_U_ack_in),
    .data_out(INPUT_STREAM_TDATA_int_regslice),
    .vld_out(INPUT_STREAM_TVALID_int_regslice),
    .ack_out(INPUT_STREAM_TREADY_int_regslice),
    .apdone_blk(regslice_both_INPUT_STREAM_V_data_V_U_apdone_blk)
);

mmult_hw_wrapped_regslice_both #(
    .DataWidth( 4 ))
regslice_both_INPUT_STREAM_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(INPUT_STREAM_TKEEP),
    .vld_in(INPUT_STREAM_TVALID),
    .ack_in(regslice_both_INPUT_STREAM_V_keep_V_U_ack_in),
    .data_out(INPUT_STREAM_TKEEP_int_regslice),
    .vld_out(regslice_both_INPUT_STREAM_V_keep_V_U_vld_out),
    .ack_out(INPUT_STREAM_TREADY_int_regslice),
    .apdone_blk(regslice_both_INPUT_STREAM_V_keep_V_U_apdone_blk)
);

mmult_hw_wrapped_regslice_both #(
    .DataWidth( 4 ))
regslice_both_INPUT_STREAM_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(INPUT_STREAM_TSTRB),
    .vld_in(INPUT_STREAM_TVALID),
    .ack_in(regslice_both_INPUT_STREAM_V_strb_V_U_ack_in),
    .data_out(INPUT_STREAM_TSTRB_int_regslice),
    .vld_out(regslice_both_INPUT_STREAM_V_strb_V_U_vld_out),
    .ack_out(INPUT_STREAM_TREADY_int_regslice),
    .apdone_blk(regslice_both_INPUT_STREAM_V_strb_V_U_apdone_blk)
);

mmult_hw_wrapped_regslice_both #(
    .DataWidth( 4 ))
regslice_both_INPUT_STREAM_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(INPUT_STREAM_TUSER),
    .vld_in(INPUT_STREAM_TVALID),
    .ack_in(regslice_both_INPUT_STREAM_V_user_V_U_ack_in),
    .data_out(INPUT_STREAM_TUSER_int_regslice),
    .vld_out(regslice_both_INPUT_STREAM_V_user_V_U_vld_out),
    .ack_out(INPUT_STREAM_TREADY_int_regslice),
    .apdone_blk(regslice_both_INPUT_STREAM_V_user_V_U_apdone_blk)
);

mmult_hw_wrapped_regslice_both #(
    .DataWidth( 1 ))
regslice_both_INPUT_STREAM_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(INPUT_STREAM_TLAST),
    .vld_in(INPUT_STREAM_TVALID),
    .ack_in(regslice_both_INPUT_STREAM_V_last_V_U_ack_in),
    .data_out(INPUT_STREAM_TLAST_int_regslice),
    .vld_out(regslice_both_INPUT_STREAM_V_last_V_U_vld_out),
    .ack_out(INPUT_STREAM_TREADY_int_regslice),
    .apdone_blk(regslice_both_INPUT_STREAM_V_last_V_U_apdone_blk)
);

mmult_hw_wrapped_regslice_both #(
    .DataWidth( 5 ))
regslice_both_INPUT_STREAM_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(INPUT_STREAM_TID),
    .vld_in(INPUT_STREAM_TVALID),
    .ack_in(regslice_both_INPUT_STREAM_V_id_V_U_ack_in),
    .data_out(INPUT_STREAM_TID_int_regslice),
    .vld_out(regslice_both_INPUT_STREAM_V_id_V_U_vld_out),
    .ack_out(INPUT_STREAM_TREADY_int_regslice),
    .apdone_blk(regslice_both_INPUT_STREAM_V_id_V_U_apdone_blk)
);

mmult_hw_wrapped_regslice_both #(
    .DataWidth( 5 ))
regslice_both_INPUT_STREAM_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(INPUT_STREAM_TDEST),
    .vld_in(INPUT_STREAM_TVALID),
    .ack_in(regslice_both_INPUT_STREAM_V_dest_V_U_ack_in),
    .data_out(INPUT_STREAM_TDEST_int_regslice),
    .vld_out(regslice_both_INPUT_STREAM_V_dest_V_U_vld_out),
    .ack_out(INPUT_STREAM_TREADY_int_regslice),
    .apdone_blk(regslice_both_INPUT_STREAM_V_dest_V_U_apdone_blk)
);

mmult_hw_wrapped_regslice_both #(
    .DataWidth( 32 ))
regslice_both_OUTPUT_STREAM_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TDATA),
    .vld_in(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TVALID),
    .ack_in(OUTPUT_STREAM_TREADY_int_regslice),
    .data_out(OUTPUT_STREAM_TDATA),
    .vld_out(regslice_both_OUTPUT_STREAM_V_data_V_U_vld_out),
    .ack_out(OUTPUT_STREAM_TREADY),
    .apdone_blk(regslice_both_OUTPUT_STREAM_V_data_V_U_apdone_blk)
);

mmult_hw_wrapped_regslice_both #(
    .DataWidth( 4 ))
regslice_both_OUTPUT_STREAM_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TKEEP),
    .vld_in(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TVALID),
    .ack_in(regslice_both_OUTPUT_STREAM_V_keep_V_U_ack_in_dummy),
    .data_out(OUTPUT_STREAM_TKEEP),
    .vld_out(regslice_both_OUTPUT_STREAM_V_keep_V_U_vld_out),
    .ack_out(OUTPUT_STREAM_TREADY),
    .apdone_blk(regslice_both_OUTPUT_STREAM_V_keep_V_U_apdone_blk)
);

mmult_hw_wrapped_regslice_both #(
    .DataWidth( 4 ))
regslice_both_OUTPUT_STREAM_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TSTRB),
    .vld_in(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TVALID),
    .ack_in(regslice_both_OUTPUT_STREAM_V_strb_V_U_ack_in_dummy),
    .data_out(OUTPUT_STREAM_TSTRB),
    .vld_out(regslice_both_OUTPUT_STREAM_V_strb_V_U_vld_out),
    .ack_out(OUTPUT_STREAM_TREADY),
    .apdone_blk(regslice_both_OUTPUT_STREAM_V_strb_V_U_apdone_blk)
);

mmult_hw_wrapped_regslice_both #(
    .DataWidth( 4 ))
regslice_both_OUTPUT_STREAM_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TUSER),
    .vld_in(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TVALID),
    .ack_in(regslice_both_OUTPUT_STREAM_V_user_V_U_ack_in_dummy),
    .data_out(OUTPUT_STREAM_TUSER),
    .vld_out(regslice_both_OUTPUT_STREAM_V_user_V_U_vld_out),
    .ack_out(OUTPUT_STREAM_TREADY),
    .apdone_blk(regslice_both_OUTPUT_STREAM_V_user_V_U_apdone_blk)
);

mmult_hw_wrapped_regslice_both #(
    .DataWidth( 1 ))
regslice_both_OUTPUT_STREAM_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TLAST),
    .vld_in(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TVALID),
    .ack_in(regslice_both_OUTPUT_STREAM_V_last_V_U_ack_in_dummy),
    .data_out(OUTPUT_STREAM_TLAST),
    .vld_out(regslice_both_OUTPUT_STREAM_V_last_V_U_vld_out),
    .ack_out(OUTPUT_STREAM_TREADY),
    .apdone_blk(regslice_both_OUTPUT_STREAM_V_last_V_U_apdone_blk)
);

mmult_hw_wrapped_regslice_both #(
    .DataWidth( 5 ))
regslice_both_OUTPUT_STREAM_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TID),
    .vld_in(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TVALID),
    .ack_in(regslice_both_OUTPUT_STREAM_V_id_V_U_ack_in_dummy),
    .data_out(OUTPUT_STREAM_TID),
    .vld_out(regslice_both_OUTPUT_STREAM_V_id_V_U_vld_out),
    .ack_out(OUTPUT_STREAM_TREADY),
    .apdone_blk(regslice_both_OUTPUT_STREAM_V_id_V_U_apdone_blk)
);

mmult_hw_wrapped_regslice_both #(
    .DataWidth( 5 ))
regslice_both_OUTPUT_STREAM_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TDEST),
    .vld_in(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TVALID),
    .ack_in(regslice_both_OUTPUT_STREAM_V_dest_V_U_ack_in_dummy),
    .data_out(OUTPUT_STREAM_TDEST),
    .vld_out(regslice_both_OUTPUT_STREAM_V_dest_V_U_vld_out),
    .ack_out(OUTPUT_STREAM_TREADY),
    .apdone_blk(regslice_both_OUTPUT_STREAM_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_start_reg <= 1'b1;
        end else if ((grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_ready == 1'b1)) begin
            grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_start_reg <= 1'b1;
        end else if ((grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_ready == 1'b1)) begin
            grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_start_reg <= 1'b1;
        end else if ((grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_ready == 1'b1)) begin
            grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_start_reg <= 1'b1;
        end else if ((grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_ready == 1'b1)) begin
            grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_start_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        INPUT_STREAM_TREADY_int_regslice = grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_INPUT_STREAM_TREADY;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        INPUT_STREAM_TREADY_int_regslice = grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_INPUT_STREAM_TREADY;
    end else begin
        INPUT_STREAM_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        a_address0 = grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_a_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        a_address0 = grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_a_address0;
    end else begin
        a_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        a_ce0 = grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_a_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        a_ce0 = grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_a_ce0;
    end else begin
        a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        a_we0 = grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_a_we0;
    end else begin
        a_we0 = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

always @ (*) begin
    if ((grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_done == 1'b0)) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

always @ (*) begin
    if ((regslice_both_OUTPUT_STREAM_V_data_V_U_apdone_blk == 1'b1)) begin
        ap_ST_fsm_state13_blk = 1'b1;
    end else begin
        ap_ST_fsm_state13_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if ((grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_done == 1'b0)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_OUTPUT_STREAM_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state13))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_OUTPUT_STREAM_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state13))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        b_address0 = grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_b_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_address0 = grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_b_address0;
    end else begin
        b_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        b_ce0 = grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_b_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_ce0 = grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_b_ce0;
    end else begin
        b_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        b_we0 = grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_b_we0;
    end else begin
        b_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        out_address0 = grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_out_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        out_address0 = grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_out_r_address0;
    end else begin
        out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        out_ce0 = grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_out_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        out_ce0 = grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_out_r_ce0;
    end else begin
        out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        out_we0 = grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_out_r_we0;
    end else begin
        out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sum_v_read = grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_sum_v_read;
    end else begin
        sum_v_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sum_v_write = grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_sum_v_write;
    end else begin
        sum_v_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((regslice_both_OUTPUT_STREAM_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign INPUT_STREAM_TREADY = regslice_both_INPUT_STREAM_V_data_V_U_ack_in;

assign OUTPUT_STREAM_TVALID = regslice_both_OUTPUT_STREAM_V_data_V_U_vld_out;

assign OUTPUT_STREAM_TVALID_int_regslice = grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TVALID;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_start = grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_start_reg;

assign grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TREADY = (ap_CS_fsm_state12 & OUTPUT_STREAM_TREADY_int_regslice);

assign grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_start = grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_start_reg;

assign grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_start = grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_start_reg;

assign grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_start = grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_start_reg;

endmodule //mmult_hw_wrapped

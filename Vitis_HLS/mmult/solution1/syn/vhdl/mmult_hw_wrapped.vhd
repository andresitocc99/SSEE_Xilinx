-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mmult_hw_wrapped is
generic (
    C_S_AXI_CONTROL_BUS_ADDR_WIDTH : INTEGER := 4;
    C_S_AXI_CONTROL_BUS_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    INPUT_STREAM_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    INPUT_STREAM_TVALID : IN STD_LOGIC;
    INPUT_STREAM_TREADY : OUT STD_LOGIC;
    INPUT_STREAM_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    INPUT_STREAM_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    INPUT_STREAM_TUSER : IN STD_LOGIC_VECTOR (3 downto 0);
    INPUT_STREAM_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    INPUT_STREAM_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    INPUT_STREAM_TDEST : IN STD_LOGIC_VECTOR (4 downto 0);
    OUTPUT_STREAM_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUTPUT_STREAM_TVALID : OUT STD_LOGIC;
    OUTPUT_STREAM_TREADY : IN STD_LOGIC;
    OUTPUT_STREAM_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    OUTPUT_STREAM_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    OUTPUT_STREAM_TUSER : OUT STD_LOGIC_VECTOR (3 downto 0);
    OUTPUT_STREAM_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    OUTPUT_STREAM_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
    OUTPUT_STREAM_TDEST : OUT STD_LOGIC_VECTOR (4 downto 0);
    s_axi_CONTROL_BUS_AWVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_WVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_WREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CONTROL_BUS_ARVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_RVALID : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_RREADY : IN STD_LOGIC;
    s_axi_CONTROL_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CONTROL_BUS_BVALID : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_BREADY : IN STD_LOGIC;
    s_axi_CONTROL_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of mmult_hw_wrapped is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "mmult_hw_wrapped_mmult_hw_wrapped,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.838000,HLS_SYN_LAT=67738,HLS_SYN_TPT=none,HLS_SYN_MEM=6,HLS_SYN_DSP=0,HLS_SYN_FF=2424,HLS_SYN_LUT=2919,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (12 downto 0) := "0000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (12 downto 0) := "0000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (12 downto 0) := "0000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (12 downto 0) := "0000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (12 downto 0) := "0000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (12 downto 0) := "0000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (12 downto 0) := "0001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (12 downto 0) := "0010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (12 downto 0) := "0100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal a_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal a_ce0 : STD_LOGIC;
    signal a_we0 : STD_LOGIC;
    signal a_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal b_ce0 : STD_LOGIC;
    signal b_we0 : STD_LOGIC;
    signal b_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal out_ce0 : STD_LOGIC;
    signal out_we0 : STD_LOGIC;
    signal out_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_start : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_done : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_idle : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_ready : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_a_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_a_ce0 : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_a_we0 : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_a_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_INPUT_STREAM_TREADY : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_start : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_done : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_idle : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_ready : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_b_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_b_ce0 : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_b_we0 : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_b_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_INPUT_STREAM_TREADY : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_start : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_done : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_idle : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_ready : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_sum_v_read : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_a_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_a_ce0 : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_b_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_b_ce0 : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_out_r_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_out_r_ce0 : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_out_r_we0 : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_out_r_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_sum_v_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_sum_v_write : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_start : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_done : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_idle : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_ready : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TREADY : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_out_r_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_out_r_ce0 : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TVALID : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TKEEP : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TUSER : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TID : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TDEST : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal sum_v_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_v_empty_n : STD_LOGIC;
    signal sum_v_read : STD_LOGIC;
    signal sum_v_full_n : STD_LOGIC;
    signal sum_v_write : STD_LOGIC;
    signal grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal regslice_both_OUTPUT_STREAM_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal regslice_both_INPUT_STREAM_V_data_V_U_apdone_blk : STD_LOGIC;
    signal INPUT_STREAM_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal INPUT_STREAM_TVALID_int_regslice : STD_LOGIC;
    signal INPUT_STREAM_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_INPUT_STREAM_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_INPUT_STREAM_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal INPUT_STREAM_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_INPUT_STREAM_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_INPUT_STREAM_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_INPUT_STREAM_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal INPUT_STREAM_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_INPUT_STREAM_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_INPUT_STREAM_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_INPUT_STREAM_V_user_V_U_apdone_blk : STD_LOGIC;
    signal INPUT_STREAM_TUSER_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_INPUT_STREAM_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_INPUT_STREAM_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_INPUT_STREAM_V_last_V_U_apdone_blk : STD_LOGIC;
    signal INPUT_STREAM_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_INPUT_STREAM_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_INPUT_STREAM_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_INPUT_STREAM_V_id_V_U_apdone_blk : STD_LOGIC;
    signal INPUT_STREAM_TID_int_regslice : STD_LOGIC_VECTOR (4 downto 0);
    signal regslice_both_INPUT_STREAM_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_INPUT_STREAM_V_id_V_U_ack_in : STD_LOGIC;
    signal regslice_both_INPUT_STREAM_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal INPUT_STREAM_TDEST_int_regslice : STD_LOGIC_VECTOR (4 downto 0);
    signal regslice_both_INPUT_STREAM_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_INPUT_STREAM_V_dest_V_U_ack_in : STD_LOGIC;
    signal OUTPUT_STREAM_TVALID_int_regslice : STD_LOGIC;
    signal OUTPUT_STREAM_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_OUTPUT_STREAM_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_OUTPUT_STREAM_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_OUTPUT_STREAM_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_OUTPUT_STREAM_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_OUTPUT_STREAM_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_OUTPUT_STREAM_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_OUTPUT_STREAM_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_OUTPUT_STREAM_V_user_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_OUTPUT_STREAM_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_OUTPUT_STREAM_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_OUTPUT_STREAM_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_OUTPUT_STREAM_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_OUTPUT_STREAM_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_OUTPUT_STREAM_V_id_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_OUTPUT_STREAM_V_id_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_OUTPUT_STREAM_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_OUTPUT_STREAM_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_OUTPUT_STREAM_V_dest_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_OUTPUT_STREAM_V_dest_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component mmult_hw_wrapped_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        INPUT_STREAM_TVALID : IN STD_LOGIC;
        a_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_we0 : OUT STD_LOGIC;
        a_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        INPUT_STREAM_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        INPUT_STREAM_TREADY : OUT STD_LOGIC;
        INPUT_STREAM_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        INPUT_STREAM_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        INPUT_STREAM_TUSER : IN STD_LOGIC_VECTOR (3 downto 0);
        INPUT_STREAM_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        INPUT_STREAM_TID : IN STD_LOGIC_VECTOR (4 downto 0);
        INPUT_STREAM_TDEST : IN STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component mmult_hw_wrapped_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        INPUT_STREAM_TVALID : IN STD_LOGIC;
        b_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        b_ce0 : OUT STD_LOGIC;
        b_we0 : OUT STD_LOGIC;
        b_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        INPUT_STREAM_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        INPUT_STREAM_TREADY : OUT STD_LOGIC;
        INPUT_STREAM_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        INPUT_STREAM_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        INPUT_STREAM_TUSER : IN STD_LOGIC_VECTOR (3 downto 0);
        INPUT_STREAM_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        INPUT_STREAM_TID : IN STD_LOGIC_VECTOR (4 downto 0);
        INPUT_STREAM_TDEST : IN STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component mmult_hw_wrapped_mmult_hw_wrapped_Pipeline_L1_L2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sum_v_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        sum_v_empty_n : IN STD_LOGIC;
        sum_v_read : OUT STD_LOGIC;
        a_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        b_ce0 : OUT STD_LOGIC;
        b_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_r_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        sum_v_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        sum_v_full_n : IN STD_LOGIC;
        sum_v_write : OUT STD_LOGIC );
    end component;


    component mmult_hw_wrapped_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        OUTPUT_STREAM_TREADY : IN STD_LOGIC;
        out_r_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        OUTPUT_STREAM_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        OUTPUT_STREAM_TVALID : OUT STD_LOGIC;
        OUTPUT_STREAM_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
        OUTPUT_STREAM_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        OUTPUT_STREAM_TUSER : OUT STD_LOGIC_VECTOR (3 downto 0);
        OUTPUT_STREAM_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        OUTPUT_STREAM_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
        OUTPUT_STREAM_TDEST : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component mmult_hw_wrapped_a_RAM_1WNR_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component mmult_hw_wrapped_out_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component mmult_hw_wrapped_fifo_w32_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component mmult_hw_wrapped_CONTROL_BUS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component mmult_hw_wrapped_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    a_U : component mmult_hw_wrapped_a_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_address0,
        ce0 => a_ce0,
        we0 => a_we0,
        d0 => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_a_d0,
        q0 => a_q0);

    b_U : component mmult_hw_wrapped_a_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_address0,
        ce0 => b_ce0,
        we0 => b_we0,
        d0 => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_b_d0,
        q0 => b_q0);

    out_U : component mmult_hw_wrapped_out_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => out_address0,
        ce0 => out_ce0,
        we0 => out_we0,
        d0 => grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_out_r_d0,
        q0 => out_q0);

    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90 : component mmult_hw_wrapped_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_start,
        ap_done => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_done,
        ap_idle => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_idle,
        ap_ready => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_ready,
        INPUT_STREAM_TVALID => INPUT_STREAM_TVALID_int_regslice,
        a_address0 => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_a_address0,
        a_ce0 => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_a_ce0,
        a_we0 => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_a_we0,
        a_d0 => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_a_d0,
        INPUT_STREAM_TDATA => INPUT_STREAM_TDATA_int_regslice,
        INPUT_STREAM_TREADY => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_INPUT_STREAM_TREADY,
        INPUT_STREAM_TKEEP => INPUT_STREAM_TKEEP_int_regslice,
        INPUT_STREAM_TSTRB => INPUT_STREAM_TSTRB_int_regslice,
        INPUT_STREAM_TUSER => INPUT_STREAM_TUSER_int_regslice,
        INPUT_STREAM_TLAST => INPUT_STREAM_TLAST_int_regslice,
        INPUT_STREAM_TID => INPUT_STREAM_TID_int_regslice,
        INPUT_STREAM_TDEST => INPUT_STREAM_TDEST_int_regslice);

    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109 : component mmult_hw_wrapped_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_start,
        ap_done => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_done,
        ap_idle => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_idle,
        ap_ready => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_ready,
        INPUT_STREAM_TVALID => INPUT_STREAM_TVALID_int_regslice,
        b_address0 => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_b_address0,
        b_ce0 => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_b_ce0,
        b_we0 => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_b_we0,
        b_d0 => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_b_d0,
        INPUT_STREAM_TDATA => INPUT_STREAM_TDATA_int_regslice,
        INPUT_STREAM_TREADY => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_INPUT_STREAM_TREADY,
        INPUT_STREAM_TKEEP => INPUT_STREAM_TKEEP_int_regslice,
        INPUT_STREAM_TSTRB => INPUT_STREAM_TSTRB_int_regslice,
        INPUT_STREAM_TUSER => INPUT_STREAM_TUSER_int_regslice,
        INPUT_STREAM_TLAST => INPUT_STREAM_TLAST_int_regslice,
        INPUT_STREAM_TID => INPUT_STREAM_TID_int_regslice,
        INPUT_STREAM_TDEST => INPUT_STREAM_TDEST_int_regslice);

    grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128 : component mmult_hw_wrapped_mmult_hw_wrapped_Pipeline_L1_L2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_start,
        ap_done => grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_done,
        ap_idle => grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_idle,
        ap_ready => grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_ready,
        sum_v_dout => sum_v_dout,
        sum_v_empty_n => sum_v_empty_n,
        sum_v_read => grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_sum_v_read,
        a_address0 => grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_a_address0,
        a_ce0 => grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_a_ce0,
        a_q0 => a_q0,
        b_address0 => grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_b_address0,
        b_ce0 => grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_b_ce0,
        b_q0 => b_q0,
        out_r_address0 => grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_out_r_address0,
        out_r_ce0 => grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_out_r_ce0,
        out_r_we0 => grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_out_r_we0,
        out_r_d0 => grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_out_r_d0,
        sum_v_din => grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_sum_v_din,
        sum_v_full_n => sum_v_full_n,
        sum_v_write => grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_sum_v_write);

    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136 : component mmult_hw_wrapped_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_start,
        ap_done => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_done,
        ap_idle => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_idle,
        ap_ready => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_ready,
        OUTPUT_STREAM_TREADY => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TREADY,
        out_r_address0 => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_out_r_address0,
        out_r_ce0 => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_out_r_ce0,
        out_r_q0 => out_q0,
        OUTPUT_STREAM_TDATA => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TDATA,
        OUTPUT_STREAM_TVALID => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TVALID,
        OUTPUT_STREAM_TKEEP => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TKEEP,
        OUTPUT_STREAM_TSTRB => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TSTRB,
        OUTPUT_STREAM_TUSER => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TUSER,
        OUTPUT_STREAM_TLAST => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TLAST,
        OUTPUT_STREAM_TID => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TID,
        OUTPUT_STREAM_TDEST => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TDEST);

    CONTROL_BUS_s_axi_U : component mmult_hw_wrapped_CONTROL_BUS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CONTROL_BUS_AWVALID,
        AWREADY => s_axi_CONTROL_BUS_AWREADY,
        AWADDR => s_axi_CONTROL_BUS_AWADDR,
        WVALID => s_axi_CONTROL_BUS_WVALID,
        WREADY => s_axi_CONTROL_BUS_WREADY,
        WDATA => s_axi_CONTROL_BUS_WDATA,
        WSTRB => s_axi_CONTROL_BUS_WSTRB,
        ARVALID => s_axi_CONTROL_BUS_ARVALID,
        ARREADY => s_axi_CONTROL_BUS_ARREADY,
        ARADDR => s_axi_CONTROL_BUS_ARADDR,
        RVALID => s_axi_CONTROL_BUS_RVALID,
        RREADY => s_axi_CONTROL_BUS_RREADY,
        RDATA => s_axi_CONTROL_BUS_RDATA,
        RRESP => s_axi_CONTROL_BUS_RRESP,
        BVALID => s_axi_CONTROL_BUS_BVALID,
        BREADY => s_axi_CONTROL_BUS_BREADY,
        BRESP => s_axi_CONTROL_BUS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    sum_v_fifo_U : component mmult_hw_wrapped_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_sum_v_din,
        if_full_n => sum_v_full_n,
        if_write => sum_v_write,
        if_dout => sum_v_dout,
        if_empty_n => sum_v_empty_n,
        if_read => sum_v_read);

    regslice_both_INPUT_STREAM_V_data_V_U : component mmult_hw_wrapped_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => INPUT_STREAM_TDATA,
        vld_in => INPUT_STREAM_TVALID,
        ack_in => regslice_both_INPUT_STREAM_V_data_V_U_ack_in,
        data_out => INPUT_STREAM_TDATA_int_regslice,
        vld_out => INPUT_STREAM_TVALID_int_regslice,
        ack_out => INPUT_STREAM_TREADY_int_regslice,
        apdone_blk => regslice_both_INPUT_STREAM_V_data_V_U_apdone_blk);

    regslice_both_INPUT_STREAM_V_keep_V_U : component mmult_hw_wrapped_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => INPUT_STREAM_TKEEP,
        vld_in => INPUT_STREAM_TVALID,
        ack_in => regslice_both_INPUT_STREAM_V_keep_V_U_ack_in,
        data_out => INPUT_STREAM_TKEEP_int_regslice,
        vld_out => regslice_both_INPUT_STREAM_V_keep_V_U_vld_out,
        ack_out => INPUT_STREAM_TREADY_int_regslice,
        apdone_blk => regslice_both_INPUT_STREAM_V_keep_V_U_apdone_blk);

    regslice_both_INPUT_STREAM_V_strb_V_U : component mmult_hw_wrapped_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => INPUT_STREAM_TSTRB,
        vld_in => INPUT_STREAM_TVALID,
        ack_in => regslice_both_INPUT_STREAM_V_strb_V_U_ack_in,
        data_out => INPUT_STREAM_TSTRB_int_regslice,
        vld_out => regslice_both_INPUT_STREAM_V_strb_V_U_vld_out,
        ack_out => INPUT_STREAM_TREADY_int_regslice,
        apdone_blk => regslice_both_INPUT_STREAM_V_strb_V_U_apdone_blk);

    regslice_both_INPUT_STREAM_V_user_V_U : component mmult_hw_wrapped_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => INPUT_STREAM_TUSER,
        vld_in => INPUT_STREAM_TVALID,
        ack_in => regslice_both_INPUT_STREAM_V_user_V_U_ack_in,
        data_out => INPUT_STREAM_TUSER_int_regslice,
        vld_out => regslice_both_INPUT_STREAM_V_user_V_U_vld_out,
        ack_out => INPUT_STREAM_TREADY_int_regslice,
        apdone_blk => regslice_both_INPUT_STREAM_V_user_V_U_apdone_blk);

    regslice_both_INPUT_STREAM_V_last_V_U : component mmult_hw_wrapped_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => INPUT_STREAM_TLAST,
        vld_in => INPUT_STREAM_TVALID,
        ack_in => regslice_both_INPUT_STREAM_V_last_V_U_ack_in,
        data_out => INPUT_STREAM_TLAST_int_regslice,
        vld_out => regslice_both_INPUT_STREAM_V_last_V_U_vld_out,
        ack_out => INPUT_STREAM_TREADY_int_regslice,
        apdone_blk => regslice_both_INPUT_STREAM_V_last_V_U_apdone_blk);

    regslice_both_INPUT_STREAM_V_id_V_U : component mmult_hw_wrapped_regslice_both
    generic map (
        DataWidth => 5)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => INPUT_STREAM_TID,
        vld_in => INPUT_STREAM_TVALID,
        ack_in => regslice_both_INPUT_STREAM_V_id_V_U_ack_in,
        data_out => INPUT_STREAM_TID_int_regslice,
        vld_out => regslice_both_INPUT_STREAM_V_id_V_U_vld_out,
        ack_out => INPUT_STREAM_TREADY_int_regslice,
        apdone_blk => regslice_both_INPUT_STREAM_V_id_V_U_apdone_blk);

    regslice_both_INPUT_STREAM_V_dest_V_U : component mmult_hw_wrapped_regslice_both
    generic map (
        DataWidth => 5)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => INPUT_STREAM_TDEST,
        vld_in => INPUT_STREAM_TVALID,
        ack_in => regslice_both_INPUT_STREAM_V_dest_V_U_ack_in,
        data_out => INPUT_STREAM_TDEST_int_regslice,
        vld_out => regslice_both_INPUT_STREAM_V_dest_V_U_vld_out,
        ack_out => INPUT_STREAM_TREADY_int_regslice,
        apdone_blk => regslice_both_INPUT_STREAM_V_dest_V_U_apdone_blk);

    regslice_both_OUTPUT_STREAM_V_data_V_U : component mmult_hw_wrapped_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TDATA,
        vld_in => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TVALID,
        ack_in => OUTPUT_STREAM_TREADY_int_regslice,
        data_out => OUTPUT_STREAM_TDATA,
        vld_out => regslice_both_OUTPUT_STREAM_V_data_V_U_vld_out,
        ack_out => OUTPUT_STREAM_TREADY,
        apdone_blk => regslice_both_OUTPUT_STREAM_V_data_V_U_apdone_blk);

    regslice_both_OUTPUT_STREAM_V_keep_V_U : component mmult_hw_wrapped_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TKEEP,
        vld_in => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TVALID,
        ack_in => regslice_both_OUTPUT_STREAM_V_keep_V_U_ack_in_dummy,
        data_out => OUTPUT_STREAM_TKEEP,
        vld_out => regslice_both_OUTPUT_STREAM_V_keep_V_U_vld_out,
        ack_out => OUTPUT_STREAM_TREADY,
        apdone_blk => regslice_both_OUTPUT_STREAM_V_keep_V_U_apdone_blk);

    regslice_both_OUTPUT_STREAM_V_strb_V_U : component mmult_hw_wrapped_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TSTRB,
        vld_in => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TVALID,
        ack_in => regslice_both_OUTPUT_STREAM_V_strb_V_U_ack_in_dummy,
        data_out => OUTPUT_STREAM_TSTRB,
        vld_out => regslice_both_OUTPUT_STREAM_V_strb_V_U_vld_out,
        ack_out => OUTPUT_STREAM_TREADY,
        apdone_blk => regslice_both_OUTPUT_STREAM_V_strb_V_U_apdone_blk);

    regslice_both_OUTPUT_STREAM_V_user_V_U : component mmult_hw_wrapped_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TUSER,
        vld_in => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TVALID,
        ack_in => regslice_both_OUTPUT_STREAM_V_user_V_U_ack_in_dummy,
        data_out => OUTPUT_STREAM_TUSER,
        vld_out => regslice_both_OUTPUT_STREAM_V_user_V_U_vld_out,
        ack_out => OUTPUT_STREAM_TREADY,
        apdone_blk => regslice_both_OUTPUT_STREAM_V_user_V_U_apdone_blk);

    regslice_both_OUTPUT_STREAM_V_last_V_U : component mmult_hw_wrapped_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TLAST,
        vld_in => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TVALID,
        ack_in => regslice_both_OUTPUT_STREAM_V_last_V_U_ack_in_dummy,
        data_out => OUTPUT_STREAM_TLAST,
        vld_out => regslice_both_OUTPUT_STREAM_V_last_V_U_vld_out,
        ack_out => OUTPUT_STREAM_TREADY,
        apdone_blk => regslice_both_OUTPUT_STREAM_V_last_V_U_apdone_blk);

    regslice_both_OUTPUT_STREAM_V_id_V_U : component mmult_hw_wrapped_regslice_both
    generic map (
        DataWidth => 5)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TID,
        vld_in => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TVALID,
        ack_in => regslice_both_OUTPUT_STREAM_V_id_V_U_ack_in_dummy,
        data_out => OUTPUT_STREAM_TID,
        vld_out => regslice_both_OUTPUT_STREAM_V_id_V_U_vld_out,
        ack_out => OUTPUT_STREAM_TREADY,
        apdone_blk => regslice_both_OUTPUT_STREAM_V_id_V_U_apdone_blk);

    regslice_both_OUTPUT_STREAM_V_dest_V_U : component mmult_hw_wrapped_regslice_both
    generic map (
        DataWidth => 5)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TDEST,
        vld_in => grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TVALID,
        ack_in => regslice_both_OUTPUT_STREAM_V_dest_V_U_ack_in_dummy,
        data_out => OUTPUT_STREAM_TDEST,
        vld_out => regslice_both_OUTPUT_STREAM_V_dest_V_U_vld_out,
        ack_out => OUTPUT_STREAM_TREADY,
        apdone_blk => regslice_both_OUTPUT_STREAM_V_dest_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_ready = ap_const_logic_1)) then 
                    grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_ready = ap_const_logic_1)) then 
                    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_ready = ap_const_logic_1)) then 
                    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_ready = ap_const_logic_1)) then 
                    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_done, grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_done, grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_done, grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_done, ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state9, ap_CS_fsm_state12, ap_CS_fsm_state13, regslice_both_OUTPUT_STREAM_V_data_V_U_apdone_blk)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if (((regslice_both_OUTPUT_STREAM_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXX";
        end case;
    end process;
    INPUT_STREAM_TREADY <= regslice_both_INPUT_STREAM_V_data_V_U_ack_in;

    INPUT_STREAM_TREADY_int_regslice_assign_proc : process(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_INPUT_STREAM_TREADY, grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_INPUT_STREAM_TREADY, ap_CS_fsm_state3, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            INPUT_STREAM_TREADY_int_regslice <= grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_INPUT_STREAM_TREADY;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            INPUT_STREAM_TREADY_int_regslice <= grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_INPUT_STREAM_TREADY;
        else 
            INPUT_STREAM_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    OUTPUT_STREAM_TVALID <= regslice_both_OUTPUT_STREAM_V_data_V_U_vld_out;
    OUTPUT_STREAM_TVALID_int_regslice <= grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TVALID;

    a_address0_assign_proc : process(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_a_address0, grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_a_address0, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            a_address0 <= grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_a_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            a_address0 <= grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_a_address0;
        else 
            a_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    a_ce0_assign_proc : process(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_a_ce0, grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_a_ce0, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            a_ce0 <= grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_a_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            a_ce0 <= grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_a_ce0;
        else 
            a_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_we0_assign_proc : process(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_a_we0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            a_we0 <= grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_a_we0;
        else 
            a_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_done)
    begin
        if ((grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state13_blk_assign_proc : process(regslice_both_OUTPUT_STREAM_V_data_V_U_apdone_blk)
    begin
        if ((regslice_both_OUTPUT_STREAM_V_data_V_U_apdone_blk = ap_const_logic_1)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_done)
    begin
        if ((grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_done)
    begin
        if ((grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_done)
    begin
        if ((grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state13, regslice_both_OUTPUT_STREAM_V_data_V_U_apdone_blk)
    begin
        if (((regslice_both_OUTPUT_STREAM_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state13, regslice_both_OUTPUT_STREAM_V_data_V_U_apdone_blk)
    begin
        if (((regslice_both_OUTPUT_STREAM_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    b_address0_assign_proc : process(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_b_address0, grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_b_address0, ap_CS_fsm_state6, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            b_address0 <= grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_b_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            b_address0 <= grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_b_address0;
        else 
            b_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    b_ce0_assign_proc : process(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_b_ce0, grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_b_ce0, ap_CS_fsm_state6, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            b_ce0 <= grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_b_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            b_ce0 <= grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_b_ce0;
        else 
            b_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_we0_assign_proc : process(grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_b_we0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            b_we0 <= grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_b_we0;
        else 
            b_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_start <= grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_ap_start_reg;
    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_OUTPUT_STREAM_TREADY <= (ap_CS_fsm_state12 and OUTPUT_STREAM_TREADY_int_regslice);
    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_start <= grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_ap_start_reg;
    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_start <= grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_83_1_VITIS_LOOP_84_2_fu_90_ap_start_reg;
    grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_start <= grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_96_4_VITIS_LOOP_97_5_fu_109_ap_start_reg;

    out_address0_assign_proc : process(grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_out_r_address0, grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_out_r_address0, ap_CS_fsm_state9, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            out_address0 <= grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_out_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            out_address0 <= grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_out_r_address0;
        else 
            out_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    out_ce0_assign_proc : process(grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_out_r_ce0, grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_out_r_ce0, ap_CS_fsm_state9, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            out_ce0 <= grp_mmult_hw_wrapped_Pipeline_VITIS_LOOP_113_7_VITIS_LOOP_114_8_fu_136_out_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            out_ce0 <= grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_out_r_ce0;
        else 
            out_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_we0_assign_proc : process(grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_out_r_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            out_we0 <= grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_out_r_we0;
        else 
            out_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sum_v_read_assign_proc : process(grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_sum_v_read, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sum_v_read <= grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_sum_v_read;
        else 
            sum_v_read <= ap_const_logic_0;
        end if; 
    end process;


    sum_v_write_assign_proc : process(grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_sum_v_write, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sum_v_write <= grp_mmult_hw_wrapped_Pipeline_L1_L2_fu_128_sum_v_write;
        else 
            sum_v_write <= ap_const_logic_0;
        end if; 
    end process;

end behav;
